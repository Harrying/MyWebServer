项目要求：1.搭建一个Tcp服务器
		 2.实现浏览器客户端和本地服务器的静态交互
		   2.1.服务器接收客户端的请求信息进行拆封，
		   2.2.将请求信息按http协议的各项内容进行封装
		   	2.2.1.第一部分：请求行【包含（请求方式(GET/POST)）（请求内容(文件名[？请求体])）（协议版本）】
		   	2.2.2.第二部分：请求头 Http header【利用HashMap进行存储】
		   		注意：请求头与请求体中间有一行空白行
		   	2.2.3.第三部分：请求体 Http body【如果请求方式为GET，则请求体为空，其内容在请求行中】
		   								   【如果请求方式为POST，则请求体内容正常】
		   		注意：请求体内容没有空行，需用字节方式读取
		   2.3.将封装的请求信息在控制台输出
		   2.4.服务器需要设置多线程模式
		   2.5.服务器将浏览器的请求内容所对应的本地文件内容进行读取,按Http协议的格式向浏览器进行发送
		   	2.5.1.如果本地有请求内容  则发送该内容
		   	2.5.2.如果本地没有请求内容，则发送特定页面
		   2.6静态交互结束
		 3.实现浏览器客户端和本地服务器的动态交互
		 	3.1.浏览器按静态方式获取服务器中的login.html登陆页面
		 	3.2.将页面中的用户名、密码传入服务器
		 	3.3.动态获取其用户名、密码，对其校验，对不同的结果做出不同的处理
		 	3.3.对不同的结果，服务器向浏览器发送登陆成功/失败的页面
	
项目过程：
	第一天：
		 * 1.搭建一个TCP服务器
		 * 2.接收客户端连接，连接建立成功后
 		 * 3.接收客户端发送过来的所有数据，输出到控制台
 		 * 4.找到对应的本地静态文件内容进行读取
		 * 5.将读取到的内容发送到浏览器
 		 
 		 注意事项：1.读取第一行中包含多项信息，需按拆分  发送到控制台
 		 				// GET /a.txt HTTP/1.1
						//按照 空白字符 拆分字符串
						String[] array = str.split(" ");
				 2.请求内容需判断本地是否存在该文件
				 3.给浏览器发送响应信息时需按照http协议规定的格式
	
	第二天：
		 * 1.封装请求类
		 *  1.1.属性：请求方式、资源名、http版本、请求头、请求体
 		 * 2.服务器设置多线程
 		 * 3.准备配置文件，从配置文件获取端口号，文件路径
		 * 4.将多进程和封装的请求类及输出代码组合
		 
		 注意事项：
		 	1.请求类中读取通道中的信息只能读取一次，不能多次读取
		 	2.请求体因不同的请求方式而不通 
		 		根据不通的请求方式选择 不通的拆分方式  按 ？拆分时需 split("[?]")
		 	3.对请求体和请求头用HashMap封装  需注意HashMap的实例化 （new）
 	
 	第三天：
 		 * 1.封装发送类
		 * 2.通过中间ServletLogin对用户名和密码的动态校验
 		 * 3.发送类通过反射技术获取ServletLogin的结果进行发送
 		
 		注意事项：
 			1.在Response类里应用反射获取ServletLogin只能直接调用请求类对象，不能new
 			2.Response类不用关心请求方式，只关心资源名进行发送
		  
		 	